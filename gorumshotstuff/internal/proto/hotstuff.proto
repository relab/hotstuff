syntax = "proto3";

package proto;

import "github.com/relab/gorums/gorums.proto";

option go_package = "github.com/relab/hotstuff/proto";

service Hotstuff {
	rpc Propose(stream HSNode) returns (stream PartialCert) {
		option (gorums.qc_strict_ordering) = "MsgID";
		option (gorums.qf_with_req) = true;
		option (gorums.custom_return_type) = "Empty";
	}
	rpc NewView(QuorumCert) returns (Empty);
}

message HSNode {
	bytes ParentHash = 1;
	bytes Command = 2;
	QuorumCert QC = 3;
	int64 Height = 4;
	uint64 MsgID = 5;
}

message PartialSig {
	int32 ReplicaID = 1;
	bytes R = 2;
	bytes S = 3;
}

message PartialCert {
	PartialSig Sig = 1;
	bytes Hash = 2;
	uint64 MsgID = 3;
}

message QuorumCert {
	repeated PartialSig Sigs = 1;
	bytes Hash = 2;
}

message Empty {}
