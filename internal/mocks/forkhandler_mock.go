// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/relab/hotstuff/modules (interfaces: ForkHandler)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	hotstuff "github.com/relab/hotstuff"
)

// MockForkHandler is a mock of ForkHandler interface.
type MockForkHandler struct {
	ctrl     *gomock.Controller
	recorder *MockForkHandlerMockRecorder
}

// MockForkHandlerMockRecorder is the mock recorder for MockForkHandler.
type MockForkHandlerMockRecorder struct {
	mock *MockForkHandler
}

// NewMockForkHandler creates a new mock instance.
func NewMockForkHandler(ctrl *gomock.Controller) *MockForkHandler {
	mock := &MockForkHandler{ctrl: ctrl}
	mock.recorder = &MockForkHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockForkHandler) EXPECT() *MockForkHandlerMockRecorder {
	return m.recorder
}

// Fork mocks base method.
func (m *MockForkHandler) Fork(arg0 hotstuff.Command) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Fork", arg0)
}

// Fork indicates an expected call of Fork.
func (mr *MockForkHandlerMockRecorder) Fork(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fork", reflect.TypeOf((*MockForkHandler)(nil).Fork), arg0)
}
