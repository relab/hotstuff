// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/relab/hotstuff/modules (interfaces: CommandQueue)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	hotstuff "github.com/relab/hotstuff"
)

// MockCommandQueue is a mock of CommandQueue interface.
type MockCommandQueue struct {
	ctrl     *gomock.Controller
	recorder *MockCommandQueueMockRecorder
}

// MockCommandQueueMockRecorder is the mock recorder for MockCommandQueue.
type MockCommandQueueMockRecorder struct {
	mock *MockCommandQueue
}

// NewMockCommandQueue creates a new mock instance.
func NewMockCommandQueue(ctrl *gomock.Controller) *MockCommandQueue {
	mock := &MockCommandQueue{ctrl: ctrl}
	mock.recorder = &MockCommandQueueMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommandQueue) EXPECT() *MockCommandQueueMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCommandQueue) Get(arg0 context.Context) (hotstuff.Command, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(hotstuff.Command)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCommandQueueMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCommandQueue)(nil).Get), arg0)
}
