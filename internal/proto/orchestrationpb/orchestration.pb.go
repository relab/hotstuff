// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: internal/proto/orchestrationpb/orchestration.proto

package orchestrationpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ReplicaOpts contains the configuration options for a replica.
type ReplicaOpts struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The replica's ID.
	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// The replica's private key.
	PrivateKey []byte `protobuf:"bytes,2,opt,name=PrivateKey,proto3" json:"PrivateKey,omitempty"`
	// The replica's public key.
	PublicKey []byte `protobuf:"bytes,3,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	// Determines whether TLS should be used.
	UseTLS bool `protobuf:"varint,4,opt,name=UseTLS,proto3" json:"UseTLS,omitempty"`
	// The replica's TLS certificate.
	Certificate []byte `protobuf:"bytes,5,opt,name=Certificate,proto3" json:"Certificate,omitempty"`
	// The private key of the TLS certificate.
	CertificateKey []byte `protobuf:"bytes,6,opt,name=CertificateKey,proto3" json:"CertificateKey,omitempty"`
	// The certificate authority that created the TLS certificates.
	CertificateAuthority []byte `protobuf:"bytes,7,opt,name=CertificateAuthority,proto3" json:"CertificateAuthority,omitempty"`
	// The name of the crypto implementation to use.
	Crypto string `protobuf:"bytes,8,opt,name=Crypto,proto3" json:"Crypto,omitempty"`
	// The name of the consensus implementation to use.
	Consensus string `protobuf:"bytes,9,opt,name=Consensus,proto3" json:"Consensus,omitempty"`
	// The name of the leader rotation algorithm to use.
	LeaderRotation string `protobuf:"bytes,10,opt,name=LeaderRotation,proto3" json:"LeaderRotation,omitempty"`
	// The number of client commands that should be batched together.
	BatchSize uint32 `protobuf:"varint,11,opt,name=BatchSize,proto3" json:"BatchSize,omitempty"`
	// The name of the dissemination and aggregation method to use.
	Communication string `protobuf:"bytes,12,opt,name=Communication,proto3" json:"Communication,omitempty"`
	// The initial view duration.
	InitialTimeout *durationpb.Duration `protobuf:"bytes,13,opt,name=InitialTimeout,proto3" json:"InitialTimeout,omitempty"`
	// The number of samples used to calculate view duration.
	TimeoutSamples uint32 `protobuf:"varint,14,opt,name=TimeoutSamples,proto3" json:"TimeoutSamples,omitempty"`
	// The number that the old view duration should be multiplied by when a new
	// timeout happens.
	TimeoutMultiplier float32 `protobuf:"fixed32,15,opt,name=TimeoutMultiplier,proto3" json:"TimeoutMultiplier,omitempty"`
	// The timeout of the initial connection setup.
	ConnectTimeout *durationpb.Duration `protobuf:"bytes,16,opt,name=ConnectTimeout,proto3" json:"ConnectTimeout,omitempty"`
	// The byzantine strategy to use. If empty, the replica will act normally.
	ByzantineStrategy string `protobuf:"bytes,17,opt,name=ByzantineStrategy,proto3" json:"ByzantineStrategy,omitempty"`
	// The maximum view timeout.
	MaxTimeout *durationpb.Duration `protobuf:"bytes,18,opt,name=MaxTimeout,proto3" json:"MaxTimeout,omitempty"`
	// A shared random number for seeding random number generators.
	SharedSeed int64 `protobuf:"varint,19,opt,name=SharedSeed,proto3" json:"SharedSeed,omitempty"`
	// A list of modules to load.
	Modules []string `protobuf:"bytes,20,rep,name=Modules,proto3" json:"Modules,omitempty"`
	// Replica locations indexed by replica ID.
	Locations []string `protobuf:"bytes,21,rep,name=Locations,proto3" json:"Locations,omitempty"`
	// Tree positions of the replica.
	TreePositions []uint32 `protobuf:"varint,22,rep,packed,name=TreePositions,proto3" json:"TreePositions,omitempty"`
	// Branch Factor in tree communication.
	BranchFactor uint32 `protobuf:"varint,23,opt,name=BranchFactor,proto3" json:"BranchFactor,omitempty"`
	// Tree Duration in tree communication.
	TreeDelta *durationpb.Duration `protobuf:"bytes,24,opt,name=TreeDelta,proto3" json:"TreeDelta,omitempty"`
	// DelayType is the type of delay to use for the wait time.
	//
	// Types that are valid to be assigned to DelayType:
	//
	//	*ReplicaOpts_AggregationTime
	//	*ReplicaOpts_TreeHeightTime
	DelayType isReplicaOpts_DelayType `protobuf_oneof:"DelayType"`
	// UseAggQC is true if aggregate quorum certs should be used by the protocol.
	UseAggQC bool `protobuf:"varint,27,opt,name=UseAggQC,proto3" json:"UseAggQC,omitempty"`
	// FixedTimeout specifies the fixed view duration. Default is zero. Overrides dynamic duration if set.
	FixedTimeout  *durationpb.Duration `protobuf:"bytes,28,opt,name=FixedTimeout,proto3" json:"FixedTimeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaOpts) Reset() {
	*x = ReplicaOpts{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaOpts) ProtoMessage() {}

func (x *ReplicaOpts) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaOpts.ProtoReflect.Descriptor instead.
func (*ReplicaOpts) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{0}
}

func (x *ReplicaOpts) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ReplicaOpts) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *ReplicaOpts) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ReplicaOpts) GetUseTLS() bool {
	if x != nil {
		return x.UseTLS
	}
	return false
}

func (x *ReplicaOpts) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *ReplicaOpts) GetCertificateKey() []byte {
	if x != nil {
		return x.CertificateKey
	}
	return nil
}

func (x *ReplicaOpts) GetCertificateAuthority() []byte {
	if x != nil {
		return x.CertificateAuthority
	}
	return nil
}

func (x *ReplicaOpts) GetCrypto() string {
	if x != nil {
		return x.Crypto
	}
	return ""
}

func (x *ReplicaOpts) GetConsensus() string {
	if x != nil {
		return x.Consensus
	}
	return ""
}

func (x *ReplicaOpts) GetLeaderRotation() string {
	if x != nil {
		return x.LeaderRotation
	}
	return ""
}

func (x *ReplicaOpts) GetBatchSize() uint32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *ReplicaOpts) GetCommunication() string {
	if x != nil {
		return x.Communication
	}
	return ""
}

func (x *ReplicaOpts) GetInitialTimeout() *durationpb.Duration {
	if x != nil {
		return x.InitialTimeout
	}
	return nil
}

func (x *ReplicaOpts) GetTimeoutSamples() uint32 {
	if x != nil {
		return x.TimeoutSamples
	}
	return 0
}

func (x *ReplicaOpts) GetTimeoutMultiplier() float32 {
	if x != nil {
		return x.TimeoutMultiplier
	}
	return 0
}

func (x *ReplicaOpts) GetConnectTimeout() *durationpb.Duration {
	if x != nil {
		return x.ConnectTimeout
	}
	return nil
}

func (x *ReplicaOpts) GetByzantineStrategy() string {
	if x != nil {
		return x.ByzantineStrategy
	}
	return ""
}

func (x *ReplicaOpts) GetMaxTimeout() *durationpb.Duration {
	if x != nil {
		return x.MaxTimeout
	}
	return nil
}

func (x *ReplicaOpts) GetSharedSeed() int64 {
	if x != nil {
		return x.SharedSeed
	}
	return 0
}

func (x *ReplicaOpts) GetModules() []string {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *ReplicaOpts) GetLocations() []string {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *ReplicaOpts) GetTreePositions() []uint32 {
	if x != nil {
		return x.TreePositions
	}
	return nil
}

func (x *ReplicaOpts) GetBranchFactor() uint32 {
	if x != nil {
		return x.BranchFactor
	}
	return 0
}

func (x *ReplicaOpts) GetTreeDelta() *durationpb.Duration {
	if x != nil {
		return x.TreeDelta
	}
	return nil
}

func (x *ReplicaOpts) GetDelayType() isReplicaOpts_DelayType {
	if x != nil {
		return x.DelayType
	}
	return nil
}

func (x *ReplicaOpts) GetAggregationTime() bool {
	if x != nil {
		if x, ok := x.DelayType.(*ReplicaOpts_AggregationTime); ok {
			return x.AggregationTime
		}
	}
	return false
}

func (x *ReplicaOpts) GetTreeHeightTime() bool {
	if x != nil {
		if x, ok := x.DelayType.(*ReplicaOpts_TreeHeightTime); ok {
			return x.TreeHeightTime
		}
	}
	return false
}

func (x *ReplicaOpts) GetUseAggQC() bool {
	if x != nil {
		return x.UseAggQC
	}
	return false
}

func (x *ReplicaOpts) GetFixedTimeout() *durationpb.Duration {
	if x != nil {
		return x.FixedTimeout
	}
	return nil
}

type isReplicaOpts_DelayType interface {
	isReplicaOpts_DelayType()
}

type ReplicaOpts_AggregationTime struct {
	// AggregationTime computes the wait time based on the latency of links in the tree.
	AggregationTime bool `protobuf:"varint,25,opt,name=AggregationTime,proto3,oneof"`
}

type ReplicaOpts_TreeHeightTime struct {
	// TreeHeightTime computes the wait time only based on the height of the tree.
	TreeHeightTime bool `protobuf:"varint,26,opt,name=TreeHeightTime,proto3,oneof"`
}

func (*ReplicaOpts_AggregationTime) isReplicaOpts_DelayType() {}

func (*ReplicaOpts_TreeHeightTime) isReplicaOpts_DelayType() {}

// ReplicaInfo is the information that the replicas need about each other.
type ReplicaInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the replica.
	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// The IP address of the replica.
	Address string `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	// The public key of the replica.
	PublicKey []byte `protobuf:"bytes,3,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	// The port that other replicas should connect to.
	ReplicaPort uint32 `protobuf:"varint,4,opt,name=ReplicaPort,proto3" json:"ReplicaPort,omitempty"`
	// The port that clients should connect to.
	ClientPort    uint32 `protobuf:"varint,5,opt,name=ClientPort,proto3" json:"ClientPort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaInfo) Reset() {
	*x = ReplicaInfo{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaInfo) ProtoMessage() {}

func (x *ReplicaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaInfo.ProtoReflect.Descriptor instead.
func (*ReplicaInfo) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{1}
}

func (x *ReplicaInfo) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ReplicaInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ReplicaInfo) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ReplicaInfo) GetReplicaPort() uint32 {
	if x != nil {
		return x.ReplicaPort
	}
	return 0
}

func (x *ReplicaInfo) GetClientPort() uint32 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

type ClientOpts struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The client's ID.
	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Determines whether TLS should be used.
	UseTLS bool `protobuf:"varint,4,opt,name=UseTLS,proto3" json:"UseTLS,omitempty"`
	// The maximum number of concurrent requests.
	MaxConcurrent uint32 `protobuf:"varint,8,opt,name=MaxConcurrent,proto3" json:"MaxConcurrent,omitempty"`
	// The size in bytes of each command.
	PayloadSize uint32 `protobuf:"varint,9,opt,name=PayloadSize,proto3" json:"PayloadSize,omitempty"`
	// The timeout of the initial connection.
	ConnectTimeout *durationpb.Duration `protobuf:"bytes,10,opt,name=ConnectTimeout,proto3" json:"ConnectTimeout,omitempty"`
	// The limit on how many commands can be sent per second.
	RateLimit float64 `protobuf:"fixed64,11,opt,name=RateLimit,proto3" json:"RateLimit,omitempty"`
	// The amount of commands per second to increase the rate limit by.
	RateStep float64 `protobuf:"fixed64,12,opt,name=RateStep,proto3" json:"RateStep,omitempty"`
	// How often to increase the rate limit.
	RateStepInterval *durationpb.Duration `protobuf:"bytes,13,opt,name=RateStepInterval,proto3" json:"RateStepInterval,omitempty"`
	// The timeout for a command.
	Timeout       *durationpb.Duration `protobuf:"bytes,14,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientOpts) Reset() {
	*x = ClientOpts{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientOpts) ProtoMessage() {}

func (x *ClientOpts) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientOpts.ProtoReflect.Descriptor instead.
func (*ClientOpts) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{2}
}

func (x *ClientOpts) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ClientOpts) GetUseTLS() bool {
	if x != nil {
		return x.UseTLS
	}
	return false
}

func (x *ClientOpts) GetMaxConcurrent() uint32 {
	if x != nil {
		return x.MaxConcurrent
	}
	return 0
}

func (x *ClientOpts) GetPayloadSize() uint32 {
	if x != nil {
		return x.PayloadSize
	}
	return 0
}

func (x *ClientOpts) GetConnectTimeout() *durationpb.Duration {
	if x != nil {
		return x.ConnectTimeout
	}
	return nil
}

func (x *ClientOpts) GetRateLimit() float64 {
	if x != nil {
		return x.RateLimit
	}
	return 0
}

func (x *ClientOpts) GetRateStep() float64 {
	if x != nil {
		return x.RateStep
	}
	return 0
}

func (x *ClientOpts) GetRateStepInterval() *durationpb.Duration {
	if x != nil {
		return x.RateStepInterval
	}
	return nil
}

func (x *ClientOpts) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type ReplicaConfiguration struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Replicas      map[uint32]*ReplicaInfo `protobuf:"bytes,1,rep,name=Replicas,proto3" json:"Replicas,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaConfiguration) Reset() {
	*x = ReplicaConfiguration{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaConfiguration) ProtoMessage() {}

func (x *ReplicaConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaConfiguration.ProtoReflect.Descriptor instead.
func (*ReplicaConfiguration) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{3}
}

func (x *ReplicaConfiguration) GetReplicas() map[uint32]*ReplicaInfo {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type CreateReplicaRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Replicas      map[uint32]*ReplicaOpts `protobuf:"bytes,1,rep,name=Replicas,proto3" json:"Replicas,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateReplicaRequest) Reset() {
	*x = CreateReplicaRequest{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReplicaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReplicaRequest) ProtoMessage() {}

func (x *CreateReplicaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReplicaRequest.ProtoReflect.Descriptor instead.
func (*CreateReplicaRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{4}
}

func (x *CreateReplicaRequest) GetReplicas() map[uint32]*ReplicaOpts {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type CreateReplicaResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Replicas      map[uint32]*ReplicaInfo `protobuf:"bytes,1,rep,name=Replicas,proto3" json:"Replicas,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateReplicaResponse) Reset() {
	*x = CreateReplicaResponse{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReplicaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReplicaResponse) ProtoMessage() {}

func (x *CreateReplicaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReplicaResponse.ProtoReflect.Descriptor instead.
func (*CreateReplicaResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{5}
}

func (x *CreateReplicaResponse) GetReplicas() map[uint32]*ReplicaInfo {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type StartReplicaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The replica IDs that should be started.
	IDs []uint32 `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
	// The configuration of replicas to connect to.
	Configuration map[uint32]*ReplicaInfo `protobuf:"bytes,2,rep,name=Configuration,proto3" json:"Configuration,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartReplicaRequest) Reset() {
	*x = StartReplicaRequest{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartReplicaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReplicaRequest) ProtoMessage() {}

func (x *StartReplicaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReplicaRequest.ProtoReflect.Descriptor instead.
func (*StartReplicaRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{6}
}

func (x *StartReplicaRequest) GetIDs() []uint32 {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *StartReplicaRequest) GetConfiguration() map[uint32]*ReplicaInfo {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type StartReplicaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartReplicaResponse) Reset() {
	*x = StartReplicaResponse{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartReplicaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReplicaResponse) ProtoMessage() {}

func (x *StartReplicaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReplicaResponse.ProtoReflect.Descriptor instead.
func (*StartReplicaResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{7}
}

type StopReplicaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IDs           []uint32               `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopReplicaRequest) Reset() {
	*x = StopReplicaRequest{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopReplicaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReplicaRequest) ProtoMessage() {}

func (x *StopReplicaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReplicaRequest.ProtoReflect.Descriptor instead.
func (*StopReplicaRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{8}
}

func (x *StopReplicaRequest) GetIDs() []uint32 {
	if x != nil {
		return x.IDs
	}
	return nil
}

type StopReplicaResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The final state hash of all executed commands
	Hashes map[uint32][]byte `protobuf:"bytes,1,rep,name=Hashes,proto3" json:"Hashes,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The final count of executed commands
	Counts        map[uint32]uint32 `protobuf:"bytes,2,rep,name=Counts,proto3" json:"Counts,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopReplicaResponse) Reset() {
	*x = StopReplicaResponse{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopReplicaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReplicaResponse) ProtoMessage() {}

func (x *StopReplicaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReplicaResponse.ProtoReflect.Descriptor instead.
func (*StopReplicaResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{9}
}

func (x *StopReplicaResponse) GetHashes() map[uint32][]byte {
	if x != nil {
		return x.Hashes
	}
	return nil
}

func (x *StopReplicaResponse) GetCounts() map[uint32]uint32 {
	if x != nil {
		return x.Counts
	}
	return nil
}

type StartClientRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The clients to create.
	Clients map[uint32]*ClientOpts `protobuf:"bytes,1,rep,name=Clients,proto3" json:"Clients,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The certificate authority that created the TLS certificates.
	CertificateAuthority []byte `protobuf:"bytes,7,opt,name=CertificateAuthority,proto3" json:"CertificateAuthority,omitempty"`
	// The replicas to connect to.
	Configuration map[uint32]*ReplicaInfo `protobuf:"bytes,10,rep,name=Configuration,proto3" json:"Configuration,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClientRequest) Reset() {
	*x = StartClientRequest{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClientRequest) ProtoMessage() {}

func (x *StartClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClientRequest.ProtoReflect.Descriptor instead.
func (*StartClientRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{10}
}

func (x *StartClientRequest) GetClients() map[uint32]*ClientOpts {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *StartClientRequest) GetCertificateAuthority() []byte {
	if x != nil {
		return x.CertificateAuthority
	}
	return nil
}

func (x *StartClientRequest) GetConfiguration() map[uint32]*ReplicaInfo {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type StartClientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClientResponse) Reset() {
	*x = StartClientResponse{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClientResponse) ProtoMessage() {}

func (x *StartClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClientResponse.ProtoReflect.Descriptor instead.
func (*StartClientResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{11}
}

type StopClientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IDs           []uint32               `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopClientRequest) Reset() {
	*x = StopClientRequest{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClientRequest) ProtoMessage() {}

func (x *StopClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClientRequest.ProtoReflect.Descriptor instead.
func (*StopClientRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{12}
}

func (x *StopClientRequest) GetIDs() []uint32 {
	if x != nil {
		return x.IDs
	}
	return nil
}

type StopClientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopClientResponse) Reset() {
	*x = StopClientResponse{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClientResponse) ProtoMessage() {}

func (x *StopClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClientResponse.ProtoReflect.Descriptor instead.
func (*StopClientResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{13}
}

type QuitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuitRequest) Reset() {
	*x = QuitRequest{}
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitRequest) ProtoMessage() {}

func (x *QuitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitRequest.ProtoReflect.Descriptor instead.
func (*QuitRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP(), []int{14}
}

var File_internal_proto_orchestrationpb_orchestration_proto protoreflect.FileDescriptor

const file_internal_proto_orchestrationpb_orchestration_proto_rawDesc = "" +
	"\n" +
	"2internal/proto/orchestrationpb/orchestration.proto\x12\x0forchestrationpb\x1a\x1egoogle/protobuf/duration.proto\"\xf1\b\n" +
	"\vReplicaOpts\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\rR\x02ID\x12\x1e\n" +
	"\n" +
	"PrivateKey\x18\x02 \x01(\fR\n" +
	"PrivateKey\x12\x1c\n" +
	"\tPublicKey\x18\x03 \x01(\fR\tPublicKey\x12\x16\n" +
	"\x06UseTLS\x18\x04 \x01(\bR\x06UseTLS\x12 \n" +
	"\vCertificate\x18\x05 \x01(\fR\vCertificate\x12&\n" +
	"\x0eCertificateKey\x18\x06 \x01(\fR\x0eCertificateKey\x122\n" +
	"\x14CertificateAuthority\x18\a \x01(\fR\x14CertificateAuthority\x12\x16\n" +
	"\x06Crypto\x18\b \x01(\tR\x06Crypto\x12\x1c\n" +
	"\tConsensus\x18\t \x01(\tR\tConsensus\x12&\n" +
	"\x0eLeaderRotation\x18\n" +
	" \x01(\tR\x0eLeaderRotation\x12\x1c\n" +
	"\tBatchSize\x18\v \x01(\rR\tBatchSize\x12$\n" +
	"\rCommunication\x18\f \x01(\tR\rCommunication\x12A\n" +
	"\x0eInitialTimeout\x18\r \x01(\v2\x19.google.protobuf.DurationR\x0eInitialTimeout\x12&\n" +
	"\x0eTimeoutSamples\x18\x0e \x01(\rR\x0eTimeoutSamples\x12,\n" +
	"\x11TimeoutMultiplier\x18\x0f \x01(\x02R\x11TimeoutMultiplier\x12A\n" +
	"\x0eConnectTimeout\x18\x10 \x01(\v2\x19.google.protobuf.DurationR\x0eConnectTimeout\x12,\n" +
	"\x11ByzantineStrategy\x18\x11 \x01(\tR\x11ByzantineStrategy\x129\n" +
	"\n" +
	"MaxTimeout\x18\x12 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"MaxTimeout\x12\x1e\n" +
	"\n" +
	"SharedSeed\x18\x13 \x01(\x03R\n" +
	"SharedSeed\x12\x18\n" +
	"\aModules\x18\x14 \x03(\tR\aModules\x12\x1c\n" +
	"\tLocations\x18\x15 \x03(\tR\tLocations\x12$\n" +
	"\rTreePositions\x18\x16 \x03(\rR\rTreePositions\x12\"\n" +
	"\fBranchFactor\x18\x17 \x01(\rR\fBranchFactor\x127\n" +
	"\tTreeDelta\x18\x18 \x01(\v2\x19.google.protobuf.DurationR\tTreeDelta\x12*\n" +
	"\x0fAggregationTime\x18\x19 \x01(\bH\x00R\x0fAggregationTime\x12(\n" +
	"\x0eTreeHeightTime\x18\x1a \x01(\bH\x00R\x0eTreeHeightTime\x12\x1a\n" +
	"\bUseAggQC\x18\x1b \x01(\bR\bUseAggQC\x12=\n" +
	"\fFixedTimeout\x18\x1c \x01(\v2\x19.google.protobuf.DurationR\fFixedTimeoutB\v\n" +
	"\tDelayType\"\x97\x01\n" +
	"\vReplicaInfo\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\rR\x02ID\x12\x18\n" +
	"\aAddress\x18\x02 \x01(\tR\aAddress\x12\x1c\n" +
	"\tPublicKey\x18\x03 \x01(\fR\tPublicKey\x12 \n" +
	"\vReplicaPort\x18\x04 \x01(\rR\vReplicaPort\x12\x1e\n" +
	"\n" +
	"ClientPort\x18\x05 \x01(\rR\n" +
	"ClientPort\"\xf5\x02\n" +
	"\n" +
	"ClientOpts\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\rR\x02ID\x12\x16\n" +
	"\x06UseTLS\x18\x04 \x01(\bR\x06UseTLS\x12$\n" +
	"\rMaxConcurrent\x18\b \x01(\rR\rMaxConcurrent\x12 \n" +
	"\vPayloadSize\x18\t \x01(\rR\vPayloadSize\x12A\n" +
	"\x0eConnectTimeout\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\x0eConnectTimeout\x12\x1c\n" +
	"\tRateLimit\x18\v \x01(\x01R\tRateLimit\x12\x1a\n" +
	"\bRateStep\x18\f \x01(\x01R\bRateStep\x12E\n" +
	"\x10RateStepInterval\x18\r \x01(\v2\x19.google.protobuf.DurationR\x10RateStepInterval\x123\n" +
	"\aTimeout\x18\x0e \x01(\v2\x19.google.protobuf.DurationR\aTimeout\"\xc2\x01\n" +
	"\x14ReplicaConfiguration\x12O\n" +
	"\bReplicas\x18\x01 \x03(\v23.orchestrationpb.ReplicaConfiguration.ReplicasEntryR\bReplicas\x1aY\n" +
	"\rReplicasEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.orchestrationpb.ReplicaInfoR\x05value:\x028\x01\"\xc2\x01\n" +
	"\x14CreateReplicaRequest\x12O\n" +
	"\bReplicas\x18\x01 \x03(\v23.orchestrationpb.CreateReplicaRequest.ReplicasEntryR\bReplicas\x1aY\n" +
	"\rReplicasEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.orchestrationpb.ReplicaOptsR\x05value:\x028\x01\"\xc4\x01\n" +
	"\x15CreateReplicaResponse\x12P\n" +
	"\bReplicas\x18\x01 \x03(\v24.orchestrationpb.CreateReplicaResponse.ReplicasEntryR\bReplicas\x1aY\n" +
	"\rReplicasEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.orchestrationpb.ReplicaInfoR\x05value:\x028\x01\"\xe6\x01\n" +
	"\x13StartReplicaRequest\x12\x10\n" +
	"\x03IDs\x18\x01 \x03(\rR\x03IDs\x12]\n" +
	"\rConfiguration\x18\x02 \x03(\v27.orchestrationpb.StartReplicaRequest.ConfigurationEntryR\rConfiguration\x1a^\n" +
	"\x12ConfigurationEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.orchestrationpb.ReplicaInfoR\x05value:\x028\x01\"\x16\n" +
	"\x14StartReplicaResponse\"&\n" +
	"\x12StopReplicaRequest\x12\x10\n" +
	"\x03IDs\x18\x01 \x03(\rR\x03IDs\"\x9f\x02\n" +
	"\x13StopReplicaResponse\x12H\n" +
	"\x06Hashes\x18\x01 \x03(\v20.orchestrationpb.StopReplicaResponse.HashesEntryR\x06Hashes\x12H\n" +
	"\x06Counts\x18\x02 \x03(\v20.orchestrationpb.StopReplicaResponse.CountsEntryR\x06Counts\x1a9\n" +
	"\vHashesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a9\n" +
	"\vCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\"\xab\x03\n" +
	"\x12StartClientRequest\x12J\n" +
	"\aClients\x18\x01 \x03(\v20.orchestrationpb.StartClientRequest.ClientsEntryR\aClients\x122\n" +
	"\x14CertificateAuthority\x18\a \x01(\fR\x14CertificateAuthority\x12\\\n" +
	"\rConfiguration\x18\n" +
	" \x03(\v26.orchestrationpb.StartClientRequest.ConfigurationEntryR\rConfiguration\x1aW\n" +
	"\fClientsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.orchestrationpb.ClientOptsR\x05value:\x028\x01\x1a^\n" +
	"\x12ConfigurationEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.orchestrationpb.ReplicaInfoR\x05value:\x028\x01\"\x15\n" +
	"\x13StartClientResponse\"%\n" +
	"\x11StopClientRequest\x12\x10\n" +
	"\x03IDs\x18\x01 \x03(\rR\x03IDs\"\x14\n" +
	"\x12StopClientResponse\"\r\n" +
	"\vQuitRequestB:Z8github.com/relab/hotstuff/internal/proto/orchestrationpbb\x06proto3"

var (
	file_internal_proto_orchestrationpb_orchestration_proto_rawDescOnce sync.Once
	file_internal_proto_orchestrationpb_orchestration_proto_rawDescData []byte
)

func file_internal_proto_orchestrationpb_orchestration_proto_rawDescGZIP() []byte {
	file_internal_proto_orchestrationpb_orchestration_proto_rawDescOnce.Do(func() {
		file_internal_proto_orchestrationpb_orchestration_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_proto_orchestrationpb_orchestration_proto_rawDesc), len(file_internal_proto_orchestrationpb_orchestration_proto_rawDesc)))
	})
	return file_internal_proto_orchestrationpb_orchestration_proto_rawDescData
}

var file_internal_proto_orchestrationpb_orchestration_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_internal_proto_orchestrationpb_orchestration_proto_goTypes = []any{
	(*ReplicaOpts)(nil),           // 0: orchestrationpb.ReplicaOpts
	(*ReplicaInfo)(nil),           // 1: orchestrationpb.ReplicaInfo
	(*ClientOpts)(nil),            // 2: orchestrationpb.ClientOpts
	(*ReplicaConfiguration)(nil),  // 3: orchestrationpb.ReplicaConfiguration
	(*CreateReplicaRequest)(nil),  // 4: orchestrationpb.CreateReplicaRequest
	(*CreateReplicaResponse)(nil), // 5: orchestrationpb.CreateReplicaResponse
	(*StartReplicaRequest)(nil),   // 6: orchestrationpb.StartReplicaRequest
	(*StartReplicaResponse)(nil),  // 7: orchestrationpb.StartReplicaResponse
	(*StopReplicaRequest)(nil),    // 8: orchestrationpb.StopReplicaRequest
	(*StopReplicaResponse)(nil),   // 9: orchestrationpb.StopReplicaResponse
	(*StartClientRequest)(nil),    // 10: orchestrationpb.StartClientRequest
	(*StartClientResponse)(nil),   // 11: orchestrationpb.StartClientResponse
	(*StopClientRequest)(nil),     // 12: orchestrationpb.StopClientRequest
	(*StopClientResponse)(nil),    // 13: orchestrationpb.StopClientResponse
	(*QuitRequest)(nil),           // 14: orchestrationpb.QuitRequest
	nil,                           // 15: orchestrationpb.ReplicaConfiguration.ReplicasEntry
	nil,                           // 16: orchestrationpb.CreateReplicaRequest.ReplicasEntry
	nil,                           // 17: orchestrationpb.CreateReplicaResponse.ReplicasEntry
	nil,                           // 18: orchestrationpb.StartReplicaRequest.ConfigurationEntry
	nil,                           // 19: orchestrationpb.StopReplicaResponse.HashesEntry
	nil,                           // 20: orchestrationpb.StopReplicaResponse.CountsEntry
	nil,                           // 21: orchestrationpb.StartClientRequest.ClientsEntry
	nil,                           // 22: orchestrationpb.StartClientRequest.ConfigurationEntry
	(*durationpb.Duration)(nil),   // 23: google.protobuf.Duration
}
var file_internal_proto_orchestrationpb_orchestration_proto_depIdxs = []int32{
	23, // 0: orchestrationpb.ReplicaOpts.InitialTimeout:type_name -> google.protobuf.Duration
	23, // 1: orchestrationpb.ReplicaOpts.ConnectTimeout:type_name -> google.protobuf.Duration
	23, // 2: orchestrationpb.ReplicaOpts.MaxTimeout:type_name -> google.protobuf.Duration
	23, // 3: orchestrationpb.ReplicaOpts.TreeDelta:type_name -> google.protobuf.Duration
	23, // 4: orchestrationpb.ReplicaOpts.FixedTimeout:type_name -> google.protobuf.Duration
	23, // 5: orchestrationpb.ClientOpts.ConnectTimeout:type_name -> google.protobuf.Duration
	23, // 6: orchestrationpb.ClientOpts.RateStepInterval:type_name -> google.protobuf.Duration
	23, // 7: orchestrationpb.ClientOpts.Timeout:type_name -> google.protobuf.Duration
	15, // 8: orchestrationpb.ReplicaConfiguration.Replicas:type_name -> orchestrationpb.ReplicaConfiguration.ReplicasEntry
	16, // 9: orchestrationpb.CreateReplicaRequest.Replicas:type_name -> orchestrationpb.CreateReplicaRequest.ReplicasEntry
	17, // 10: orchestrationpb.CreateReplicaResponse.Replicas:type_name -> orchestrationpb.CreateReplicaResponse.ReplicasEntry
	18, // 11: orchestrationpb.StartReplicaRequest.Configuration:type_name -> orchestrationpb.StartReplicaRequest.ConfigurationEntry
	19, // 12: orchestrationpb.StopReplicaResponse.Hashes:type_name -> orchestrationpb.StopReplicaResponse.HashesEntry
	20, // 13: orchestrationpb.StopReplicaResponse.Counts:type_name -> orchestrationpb.StopReplicaResponse.CountsEntry
	21, // 14: orchestrationpb.StartClientRequest.Clients:type_name -> orchestrationpb.StartClientRequest.ClientsEntry
	22, // 15: orchestrationpb.StartClientRequest.Configuration:type_name -> orchestrationpb.StartClientRequest.ConfigurationEntry
	1,  // 16: orchestrationpb.ReplicaConfiguration.ReplicasEntry.value:type_name -> orchestrationpb.ReplicaInfo
	0,  // 17: orchestrationpb.CreateReplicaRequest.ReplicasEntry.value:type_name -> orchestrationpb.ReplicaOpts
	1,  // 18: orchestrationpb.CreateReplicaResponse.ReplicasEntry.value:type_name -> orchestrationpb.ReplicaInfo
	1,  // 19: orchestrationpb.StartReplicaRequest.ConfigurationEntry.value:type_name -> orchestrationpb.ReplicaInfo
	2,  // 20: orchestrationpb.StartClientRequest.ClientsEntry.value:type_name -> orchestrationpb.ClientOpts
	1,  // 21: orchestrationpb.StartClientRequest.ConfigurationEntry.value:type_name -> orchestrationpb.ReplicaInfo
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_internal_proto_orchestrationpb_orchestration_proto_init() }
func file_internal_proto_orchestrationpb_orchestration_proto_init() {
	if File_internal_proto_orchestrationpb_orchestration_proto != nil {
		return
	}
	file_internal_proto_orchestrationpb_orchestration_proto_msgTypes[0].OneofWrappers = []any{
		(*ReplicaOpts_AggregationTime)(nil),
		(*ReplicaOpts_TreeHeightTime)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_proto_orchestrationpb_orchestration_proto_rawDesc), len(file_internal_proto_orchestrationpb_orchestration_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_proto_orchestrationpb_orchestration_proto_goTypes,
		DependencyIndexes: file_internal_proto_orchestrationpb_orchestration_proto_depIdxs,
		MessageInfos:      file_internal_proto_orchestrationpb_orchestration_proto_msgTypes,
	}.Build()
	File_internal_proto_orchestrationpb_orchestration_proto = out.File
	file_internal_proto_orchestrationpb_orchestration_proto_goTypes = nil
	file_internal_proto_orchestrationpb_orchestration_proto_depIdxs = nil
}
