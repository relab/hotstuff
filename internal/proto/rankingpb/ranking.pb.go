// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: internal/proto/rankingpb/ranking.proto

package rankingpb

import (
	_ "github.com/relab/gorums"
	hotstuffpb "github.com/relab/hotstuff/internal/proto/hotstuffpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComplaintType int32

const (
	ComplaintType_InvalidVote      ComplaintType = 0
	ComplaintType_InvalidProposal  ComplaintType = 1
	ComplaintType_OldProposal      ComplaintType = 2
	ComplaintType_SlowNode         ComplaintType = 3
	ComplaintType_NoShowToVote     ComplaintType = 4
	ComplaintType_InvalidState     ComplaintType = 5
	ComplaintType_InvalidComplaint ComplaintType = 6
)

// Enum value maps for ComplaintType.
var (
	ComplaintType_name = map[int32]string{
		0: "InvalidVote",
		1: "InvalidProposal",
		2: "OldProposal",
		3: "SlowNode",
		4: "NoShowToVote",
		5: "InvalidState",
		6: "InvalidComplaint",
	}
	ComplaintType_value = map[string]int32{
		"InvalidVote":      0,
		"InvalidProposal":  1,
		"OldProposal":      2,
		"SlowNode":         3,
		"NoShowToVote":     4,
		"InvalidState":     5,
		"InvalidComplaint": 6,
	}
)

func (x ComplaintType) Enum() *ComplaintType {
	p := new(ComplaintType)
	*p = x
	return p
}

func (x ComplaintType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplaintType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_rankingpb_ranking_proto_enumTypes[0].Descriptor()
}

func (ComplaintType) Type() protoreflect.EnumType {
	return &file_internal_proto_rankingpb_ranking_proto_enumTypes[0]
}

func (x ComplaintType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComplaintType.Descriptor instead.
func (ComplaintType) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_rankingpb_ranking_proto_rawDescGZIP(), []int{0}
}

type Complaint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Complaniant      uint32        `protobuf:"varint,1,opt,name=complaniant,proto3" json:"complaniant,omitempty"`
	Complainee       uint32        `protobuf:"varint,2,opt,name=complainee,proto3" json:"complainee,omitempty"`
	Type             ComplaintType `protobuf:"varint,3,opt,name=type,proto3,enum=rankingpb.ComplaintType" json:"type,omitempty"`
	IsProofAvailable bool          `protobuf:"varint,4,opt,name=isProofAvailable,proto3" json:"isProofAvailable,omitempty"`
	// Types that are assignable to Proof:
	//	*Complaint_InvalidProposal
	//	*Complaint_InvalidVote
	//	*Complaint_InvalidNewView
	//	*Complaint_InvalidState
	//	*Complaint_InvalidComplaint
	Proof isComplaint_Proof `protobuf_oneof:"Proof"`
}

func (x *Complaint) Reset() {
	*x = Complaint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_rankingpb_ranking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complaint) ProtoMessage() {}

func (x *Complaint) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_rankingpb_ranking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complaint.ProtoReflect.Descriptor instead.
func (*Complaint) Descriptor() ([]byte, []int) {
	return file_internal_proto_rankingpb_ranking_proto_rawDescGZIP(), []int{0}
}

func (x *Complaint) GetComplaniant() uint32 {
	if x != nil {
		return x.Complaniant
	}
	return 0
}

func (x *Complaint) GetComplainee() uint32 {
	if x != nil {
		return x.Complainee
	}
	return 0
}

func (x *Complaint) GetType() ComplaintType {
	if x != nil {
		return x.Type
	}
	return ComplaintType_InvalidVote
}

func (x *Complaint) GetIsProofAvailable() bool {
	if x != nil {
		return x.IsProofAvailable
	}
	return false
}

func (m *Complaint) GetProof() isComplaint_Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (x *Complaint) GetInvalidProposal() *hotstuffpb.Proposal {
	if x, ok := x.GetProof().(*Complaint_InvalidProposal); ok {
		return x.InvalidProposal
	}
	return nil
}

func (x *Complaint) GetInvalidVote() *hotstuffpb.PartialCert {
	if x, ok := x.GetProof().(*Complaint_InvalidVote); ok {
		return x.InvalidVote
	}
	return nil
}

func (x *Complaint) GetInvalidNewView() *hotstuffpb.SyncInfo {
	if x, ok := x.GetProof().(*Complaint_InvalidNewView); ok {
		return x.InvalidNewView
	}
	return nil
}

func (x *Complaint) GetInvalidState() *CurrentState {
	if x, ok := x.GetProof().(*Complaint_InvalidState); ok {
		return x.InvalidState
	}
	return nil
}

func (x *Complaint) GetInvalidComplaint() *Complaint {
	if x, ok := x.GetProof().(*Complaint_InvalidComplaint); ok {
		return x.InvalidComplaint
	}
	return nil
}

type isComplaint_Proof interface {
	isComplaint_Proof()
}

type Complaint_InvalidProposal struct {
	InvalidProposal *hotstuffpb.Proposal `protobuf:"bytes,5,opt,name=invalidProposal,proto3,oneof"`
}

type Complaint_InvalidVote struct {
	InvalidVote *hotstuffpb.PartialCert `protobuf:"bytes,6,opt,name=invalidVote,proto3,oneof"`
}

type Complaint_InvalidNewView struct {
	InvalidNewView *hotstuffpb.SyncInfo `protobuf:"bytes,7,opt,name=invalidNewView,proto3,oneof"`
}

type Complaint_InvalidState struct {
	InvalidState *CurrentState `protobuf:"bytes,8,opt,name=invalidState,proto3,oneof"`
}

type Complaint_InvalidComplaint struct {
	InvalidComplaint *Complaint `protobuf:"bytes,9,opt,name=invalidComplaint,proto3,oneof"`
}

func (*Complaint_InvalidProposal) isComplaint_Proof() {}

func (*Complaint_InvalidVote) isComplaint_Proof() {}

func (*Complaint_InvalidNewView) isComplaint_Proof() {}

func (*Complaint_InvalidState) isComplaint_Proof() {}

func (*Complaint_InvalidComplaint) isComplaint_Proof() {}

type CurrentState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    uint32                `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	View      uint64                `protobuf:"varint,2,opt,name=View,proto3" json:"View,omitempty"`
	Hash      []byte                `protobuf:"bytes,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Signature *hotstuffpb.Signature `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *CurrentState) Reset() {
	*x = CurrentState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_rankingpb_ranking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentState) ProtoMessage() {}

func (x *CurrentState) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_rankingpb_ranking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentState.ProtoReflect.Descriptor instead.
func (*CurrentState) Descriptor() ([]byte, []int) {
	return file_internal_proto_rankingpb_ranking_proto_rawDescGZIP(), []int{1}
}

func (x *CurrentState) GetSender() uint32 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *CurrentState) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *CurrentState) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *CurrentState) GetSignature() *hotstuffpb.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_internal_proto_rankingpb_ranking_proto protoreflect.FileDescriptor

var file_internal_proto_rankingpb_ranking_proto_rawDesc = []byte{
	0x0a, 0x26, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0e, 0x68, 0x6f, 0x74, 0x73, 0x74, 0x75, 0x66, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0c, 0x67, 0x6f, 0x72, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2,
	0x03, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x65, 0x65, 0x12, 0x2c,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x72,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x69, 0x73, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x68, 0x6f, 0x74, 0x73, 0x74, 0x75, 0x66, 0x66, 0x70, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0b, 0x69, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x68, 0x6f, 0x74, 0x73, 0x74, 0x75, 0x66, 0x66, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x43, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x68, 0x6f, 0x74, 0x73, 0x74, 0x75, 0x66, 0x66, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x12, 0x3d, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x22, 0x83, 0x01, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x56, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x6f, 0x74, 0x73, 0x74, 0x75,
	0x66, 0x66, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2a, 0x8e, 0x01, 0x0a, 0x0d, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x10, 0x03,
	0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x6f, 0x56, 0x6f, 0x74, 0x65,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x10, 0x06, 0x32, 0x53, 0x0a, 0x0c, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x43, 0x0a, 0x0d, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x72, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x04, 0x98, 0xb5, 0x18, 0x01, 0x42,
	0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65,
	0x6c, 0x61, 0x62, 0x2f, 0x68, 0x6f, 0x74, 0x73, 0x74, 0x75, 0x66, 0x66, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_proto_rankingpb_ranking_proto_rawDescOnce sync.Once
	file_internal_proto_rankingpb_ranking_proto_rawDescData = file_internal_proto_rankingpb_ranking_proto_rawDesc
)

func file_internal_proto_rankingpb_ranking_proto_rawDescGZIP() []byte {
	file_internal_proto_rankingpb_ranking_proto_rawDescOnce.Do(func() {
		file_internal_proto_rankingpb_ranking_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_proto_rankingpb_ranking_proto_rawDescData)
	})
	return file_internal_proto_rankingpb_ranking_proto_rawDescData
}

var file_internal_proto_rankingpb_ranking_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_proto_rankingpb_ranking_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_internal_proto_rankingpb_ranking_proto_goTypes = []interface{}{
	(ComplaintType)(0),             // 0: rankingpb.ComplaintType
	(*Complaint)(nil),              // 1: rankingpb.Complaint
	(*CurrentState)(nil),           // 2: rankingpb.CurrentState
	(*hotstuffpb.Proposal)(nil),    // 3: hotstuffpb.Proposal
	(*hotstuffpb.PartialCert)(nil), // 4: hotstuffpb.PartialCert
	(*hotstuffpb.SyncInfo)(nil),    // 5: hotstuffpb.SyncInfo
	(*hotstuffpb.Signature)(nil),   // 6: hotstuffpb.Signature
	(*emptypb.Empty)(nil),          // 7: google.protobuf.Empty
}
var file_internal_proto_rankingpb_ranking_proto_depIdxs = []int32{
	0, // 0: rankingpb.Complaint.type:type_name -> rankingpb.ComplaintType
	3, // 1: rankingpb.Complaint.invalidProposal:type_name -> hotstuffpb.Proposal
	4, // 2: rankingpb.Complaint.invalidVote:type_name -> hotstuffpb.PartialCert
	5, // 3: rankingpb.Complaint.invalidNewView:type_name -> hotstuffpb.SyncInfo
	2, // 4: rankingpb.Complaint.invalidState:type_name -> rankingpb.CurrentState
	1, // 5: rankingpb.Complaint.invalidComplaint:type_name -> rankingpb.Complaint
	6, // 6: rankingpb.CurrentState.signature:type_name -> hotstuffpb.Signature
	1, // 7: rankingpb.ComplaintLog.SendComplaint:input_type -> rankingpb.Complaint
	7, // 8: rankingpb.ComplaintLog.SendComplaint:output_type -> google.protobuf.Empty
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_internal_proto_rankingpb_ranking_proto_init() }
func file_internal_proto_rankingpb_ranking_proto_init() {
	if File_internal_proto_rankingpb_ranking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_proto_rankingpb_ranking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complaint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_rankingpb_ranking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_internal_proto_rankingpb_ranking_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Complaint_InvalidProposal)(nil),
		(*Complaint_InvalidVote)(nil),
		(*Complaint_InvalidNewView)(nil),
		(*Complaint_InvalidState)(nil),
		(*Complaint_InvalidComplaint)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_proto_rankingpb_ranking_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_proto_rankingpb_ranking_proto_goTypes,
		DependencyIndexes: file_internal_proto_rankingpb_ranking_proto_depIdxs,
		EnumInfos:         file_internal_proto_rankingpb_ranking_proto_enumTypes,
		MessageInfos:      file_internal_proto_rankingpb_ranking_proto_msgTypes,
	}.Build()
	File_internal_proto_rankingpb_ranking_proto = out.File
	file_internal_proto_rankingpb_ranking_proto_rawDesc = nil
	file_internal_proto_rankingpb_ranking_proto_goTypes = nil
	file_internal_proto_rankingpb_ranking_proto_depIdxs = nil
}
